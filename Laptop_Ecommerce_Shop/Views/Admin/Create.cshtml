@model Laptop_Ecommerce_Shop.Models.MultiModelsForProducts
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Add a Product</title>
    <script src="~/assets/js/preview-files.js"></script>    
</head>
<body class="p-top-50" data-spy="scroll" data-target=".navbar-fixed-top" data-offset="100">
    <!--product single section-->
    <section class="p-top-40 p-bottom-40 p">

        <!--Container-->
        <div class="container clearfix">
            <h3>Add a New Product</h3>
            <div class="form-horizontal">
                <hr />
                @using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { @class = "needs-validation", @novalidate = "", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-lg-6 col-md-7 col-sm-12">
                        <div class="form-group">
                            <label class="control-label col-lg-3 col-md-3 col-sm-3"> Product Name</label>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.EditorFor(model => model.ProductItem.ProductName, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                                <span class="invalid-feedback">Please fill  the field.</span>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductItem.Brand, htmlAttributes: new { @class = "control-label col-lg-3 col-md-3 col-sm-3" })
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.EditorFor(model => model.ProductItem.Brand, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                                <div class="invalid-feedback">Please fill  the field.</div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductItem.Description, htmlAttributes: new { @class = "control-label col-lg-3 col-md-3 col-sm-3" })
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.TextAreaFor(model => model.ProductItem.Description, new { cols = 35, @rows = 3, @class = "form-control", @Required = "" })
                                <div class="invalid-feedback">Please fill  the field.</div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductItem.Price, htmlAttributes: new { @class = "control-label col-lg-3 col-md-3 col-sm-3" })
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.EditorFor(model => model.ProductItem.Price, new { htmlAttributes = new { @class = "form-control", @Required = "", @type = "number" } })
                                <div class="invalid-feedback">Please fill  the field.</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-lg-3 col-md-3 col-sm-3"> key Features</label>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.TextAreaFor(model => model.ProductItem.keyFeatures, new { cols = 35, @rows = 5, @class = "form-control", @Required = "" })
                                <div class="invalid-feedback">Please fill  the field.</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 col-md-3 col-sm-3 text-center">Image</label>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.TextBoxFor(c => c.productFile.imgFile, new { type = "file", multiple = "true", id = "imgFiles", name = "files[]", required = "" })
                                <div class="invalid-feedback">Please upload an image.</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 col-md-3 col-sm-3 text-center">Video</label>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.TextBoxFor(c => c.productFile.videoFile, new { type = "file", multiple = "true", id = "videoFiles", name = "files[]" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-10 col-md-10 col-sm-12 p-top-10 text-center">
                                @Html.ActionLink("Back to List", "Index") |
                                <input type="submit" value="Create" class="btn btn-main btn-theme" onclick="SubmitForm()" />
                            </div>
                        </div>                      
                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                    </div>
                }
            </div>
            <div class="col-lg-6 col-md-5 col-sm-12">
                <div class="form-group">
                    <div id="imgList" class="img-list col-lg-5 col-md-5 col-sm-5">
                    </div>
                    <div id="videoList" class="col-lg-5 col-md-5 col-sm-5">
                    </div>
                </div>
            </div>
            </div>
</section>
<script>    
    document.getElementById('imgFiles').addEventListener('change', imagePreview, false);
    document.getElementById('videoFiles').addEventListener('change', videoPreview, false);
</script>
</body>
</html>


