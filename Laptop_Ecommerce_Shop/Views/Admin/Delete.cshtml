@model Laptop_Ecommerce_Shop.ProductItem
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@{
    IEnumerable<ProductFile> showImgs = ViewData["Product images"] as IEnumerable<ProductFile>;
    IEnumerable<ProductFile> showVideos = ViewData["Product videos"] as IEnumerable<ProductFile>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Delete Product</title>
</head>
<body class="p-top-50" data-spy="scroll" data-target=".navbar-fixed-top" data-offset="100">
    <!--Delete section-->
    <section class="p-top-40 p-bottom-40 p">
        <!--Container-->
        <div class="container clearfix">
            <h3>Delete The Product</h3>
            <h5>Are you sure you want to delete this?</h5>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-actions no-color">
                    @Html.ActionLink("Back to List", "Index") |
                    <input type="submit" value="Delete" class="btn btn-main btn-theme" />
                </div>
            }
            <div class="form-horizontal">
                <hr />
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            <label class="control-label"> Product Name</label>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            <label class="control-label"> Brand</label>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            <label class="control-label"> Price</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            @Html.DisplayFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            @Html.DisplayFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            @Html.DisplayFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            <label class="control-label">Description</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.DisplayFor(model => model.Description)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                            <label class="control-label">key Features</label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <p style="white-space: pre-line; margin-top:-28px">
                                @Html.DisplayFor(model => model.keyFeatures)
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        <!--Post-->
                        <div class="postSingle">
                            <div class="postMedia m-bottom-40">
                                <div id="owl-files" class="owl-carousel owl-theme text-center">
                                    @foreach (var imgs in showImgs)
                                    {
                                        var imgBase64 = Convert.ToBase64String(imgs.FileContent);
                                        var imgsrc = string.Format("data:image/gif;base64,{0}", imgBase64);
                                        <div>
                                            <img alt="" src='@imgsrc'>
                                        </div><!--Post image-->
                                    }
                                </div>
                            </div><!--Post image-->
                            @foreach (var videos in showVideos)
                            {
                                if (videos.FileContent != null)
                                {
                                    var vidBase64 = Convert.ToBase64String(videos.FileContent);
                                    var vidsrc = string.Format("data:video/mp4;base64,{0}", vidBase64);

                                    <div class="postMedia">
                                        <video style="width:100%; height:auto;" controls>
                                            <source src='@vidsrc' type="video/mp4" />
                                        </video>
                                    </div><!--Post image-->
                                }
                            }

                        </div>
                        <!--End post-->
                    </div>

                </div>
            </div>
        </div>
    </section>
</body>
</html>
